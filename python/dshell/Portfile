# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0
PortGroup           python 1.0

github.setup        USArmyResearchLab Dshell 7b3ef0bd7192f6ec6665a5985d61accf3e4a5789
name                dshell
version             20210112
categories-append   net security
maintainers         gmail.com:allan.que openmaintainer
license             MIT
platforms           darwin

description         An extensible network forensic analysis framework.
long_description    ${description} Enables rapid development of plugins to \
                    support the dissection of network packet captures.

checksums           rmd160  73550bee8cda05d00cf1d4666be6ac3113b83b64 \
                    sha256  4d0fdf86923a499e2e886c6ee8b5d061bb564f5a30c6bdd36562eb7eb66445fb \
                    size    190821

python.default_version  37

depends_run         port:GeoLiteCity \
                    port:geoipupdate
depends_build       port:py${python.version}-dpkt
depends_lib         port:py${python.version}-crypto \
                    port:py${python.version}-ipy \
                    port:py${python.version}-pypcap \
                    port:py${python.version}-pygeoip

use_parallel_build  no
build.cmd           make
build.target        all
build.env-append \
    PYTHONPATH="${frameworks_dir}/Python.framework/Versions/${python.branch}/lib/python${python.branch}/site-packages"

# Portfile Variables
#
# BINPATH - path to decode.py, generate-dshellrc.py and pcap(anon|slice).py
set dshell.binpath "${prefix}/lib/dshell"
#
# DSHELL - path to main dshell bin file
set dshell.dshell "${prefix}/bin"
#
# DATAPATH - GeoIP legacy files stored here
# dshell.py set to look for '/GeoIP/...' under DATAPATH
set dshell.datapath "${prefix}/share"
#
# DECODERPATH
set dshell.decoderpath "${prefix}/lib/dshell/decoders"
#
# LIBPATH
set dshell.libpath "${prefix}/lib/dshell"

#patch {
#    # update python files with the exact python version
#    fs-traverse f ${worksrcpath} {
#        if {[string match "*.py" ${f}]} {
#            reinplace -q "s+env python+env python${python.branch}+g" ${f}
#            reinplace -q "s+bin/python+bin/python${python.branch}+g" ${f}
#        }
#    }
#}

post-build {
    foreach f [glob -type f -dir ${worksrcpath}/doc *.html] {
        reinplace -q -locale C "s+${worksrcpath}/+${prefix}/+g" ${f}
        reinplace -q -locale C "s+${prefix}/lib/+${dshell.libpath}/+g" ${f}
        reinplace -q -locale C "s+${prefix}/decoders/+${dshell.decoderpath}/+g" ${f}
    }

    # replace .dshellrc paths
    reinplace "s+${worksrcpath}/bin+${dshell.binpath}/bin+g" ${worksrcpath}/.dshellrc
    reinplace "s+${worksrcpath}/share+${dshell.datapath}+g" ${worksrcpath}/.dshellrc
    reinplace "s+${worksrcpath}/decoders+${dshell.decoderpath}+g" ${worksrcpath}/.dshellrc
    reinplace "s+${worksrcpath}/lib+${dshell.libpath}+g" ${worksrcpath}/.dshellrc
    reinplace "s+${worksrcpath}+${dshell.dshell}+g" ${worksrcpath}/.dshellrc

    # update bin files to new .dshellrc file
    reinplace -W ${worksrcpath} "s+${worksrcpath}/.dshellrc+${prefix}/etc/dshell.conf+g" \
        dshell dshell-decode
}

destroot {
    copy ${worksrcpath}/lib ${destroot}${dshell.libpath}
    copy ${worksrcpath}/decoders ${destroot}${dshell.decoderpath}
    copy ${worksrcpath}/bin ${destroot}${dshell.binpath}

    # point symlink to correct path of decode.py
    file delete ${destroot}${dshell.binpath}/bin/decode
    ln -s ${dshell.binpath}/bin/decode.py ${destroot}${dshell.binpath}/bin/decode

    # install html doc files
    file delete ${worksrcpath}/doc/generate-doc.sh
    foreach f [glob -type f -dir ${worksrcpath}/doc *.html] {
        xinstall -m 644 ${f} ${destroot}${prefix}/share/doc/${name}
    }

    xinstall -m 755 -W ${worksrcpath} dshell dshell-decode ${destroot}${dshell.dshell}
    xinstall -m 644 -W ${worksrcpath} .dshellrc ${destroot}${prefix}/etc/dshell.conf
}
